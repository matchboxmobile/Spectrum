//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace allseen { namespace LSF { namespace LampState {

// This class, and the associated EventArgs classes, exist for the benefit of JavaScript developers who
// do not have the ability to implement ILampStateService. Instead, LampStateServiceEventAdapter
// provides the Interface implementation and exposes a set of compatible events to the developer.
public ref class LampStateServiceEventAdapter sealed : [Windows::Foundation::Metadata::Default] ILampStateService
{
public:
    // Method Invocation Events
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateTransitionLampStateCalledEventArgs^>^ TransitionLampStateCalled;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateApplyPulseEffectCalledEventArgs^>^ ApplyPulseEffectCalled;

    // Property Read Events
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetVersionRequestedEventArgs^>^ GetVersionRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetOnOffRequestedEventArgs^>^ GetOnOffRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetHueRequestedEventArgs^>^ GetHueRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetSaturationRequestedEventArgs^>^ GetSaturationRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetColorTempRequestedEventArgs^>^ GetColorTempRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateGetBrightnessRequestedEventArgs^>^ GetBrightnessRequested;
    
    // Property Write Events
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateSetOnOffRequestedEventArgs^>^ SetOnOffRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateSetHueRequestedEventArgs^>^ SetHueRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateSetSaturationRequestedEventArgs^>^ SetSaturationRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateSetColorTempRequestedEventArgs^>^ SetColorTempRequested;
    event Windows::Foundation::TypedEventHandler<LampStateServiceEventAdapter^, LampStateSetBrightnessRequestedEventArgs^>^ SetBrightnessRequested;

    // ILampStateService Implementation
    virtual Windows::Foundation::IAsyncOperation<LampStateTransitionLampStateResult^>^ TransitionLampStateAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint64 interfaceMemberTimestamp, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberNewState, _In_ uint32 interfaceMemberTransitionPeriod);
    virtual Windows::Foundation::IAsyncOperation<LampStateApplyPulseEffectResult^>^ ApplyPulseEffectAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberFromState, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberToState, _In_ uint32 interfaceMemberPeriod, _In_ uint32 interfaceMemberDuration, _In_ uint32 interfaceMemberNumPulses, _In_ uint64 interfaceMemberTimestamp);

    virtual Windows::Foundation::IAsyncOperation<LampStateGetVersionResult^>^ GetVersionAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<LampStateGetOnOffResult^>^ GetOnOffAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<LampStateGetHueResult^>^ GetHueAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<LampStateGetSaturationResult^>^ GetSaturationAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<LampStateGetColorTempResult^>^ GetColorTempAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<LampStateGetBrightnessResult^>^ GetBrightnessAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    virtual Windows::Foundation::IAsyncOperation<LampStateSetOnOffResult^>^ SetOnOffAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ bool value);
    virtual Windows::Foundation::IAsyncOperation<LampStateSetHueResult^>^ SetHueAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint32 value);
    virtual Windows::Foundation::IAsyncOperation<LampStateSetSaturationResult^>^ SetSaturationAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint32 value);
    virtual Windows::Foundation::IAsyncOperation<LampStateSetColorTempResult^>^ SetColorTempAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint32 value);
    virtual Windows::Foundation::IAsyncOperation<LampStateSetBrightnessResult^>^ SetBrightnessAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint32 value);
};

} } } } 
